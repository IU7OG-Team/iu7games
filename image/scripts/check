#! /bin/bash
COMPILE_FLAGS="-Werror -Wall -Wextra -Wpedantic -Wcast-align -Wcast-qual \
-Wconversion -Wenum-compare -Wfloat-equal -Wredundant-decls -Wsign-conversion -c -O3"
GAME_PATH="$1"

echo -e "\033[0;34mCHECK SOURCE EXISTANCE\033[0m"
if [ -e ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c ]
then
    echo -e "\033[0;32m${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c FOUND\033[0m"
    SIGNATURE="$(grep "$3" ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c)n"
    echo -e "\033[0;34mCHECK SIGNATURE CORRECTNESS\033[0m"
    if [ "$SIGNATURE" = 'n' ]
    then
        echo -e "\033[0;31mWRONG SIGNATURE FOUND IN ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c\033[0m"
        EXPECTED="$(echo $3 | sed -n 's/\\//pg')"
        echo -e "\033[0;34mEXPECTED\033[0m \033[1;33m${3}\033[0m"
        echo -e "\033[0;31mCHECK FAILED\033[0m\n"
        exit 1
    else
        echo -e "\033[0;32mCORRECT SIGNATURE FOUND IN ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c\033[0m"
    fi
    SPAM="$(cpp ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c | sed -n 's/\(system(.*)\)/\1/p')n
    $(cpp ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c | sed -n 's/\(fork()\)/\1/p')n
    $(cpp ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c | sed -n 's/\(exec.\{0,4\}(.*)\)/\1/p')n
    $(cpp ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c | sed -n 's/\([_]\{0,2\}asm[_]\{0,2\}\)/\1/p')n
    $(cpp ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c | sed -n 's/\(volatile\)/\1/p')n"
    SPAM=$(echo $SPAM | tr -d ' ')
    echo -e "\033[0;34mCHECK SPAM EXISTANCE\033[0m"
    if [[ "$SPAM" =~ n{5,} ]]
    then
        echo -e "\033[0;32mNO SPAM FOUND IN ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c\033[0m"
        gcc ${COMPILE_FLAGS} -fpic ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c
        gcc -shared -o ${GITLAB_USER_LOGIN}_$2_lib.so ${GITLAB_USER_LOGIN}_$2.o
    else
        echo -e "\033[0;31mSPAM FOUND IN ${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c\033[0m"
        echo -e "\033[1;33mCHECK YOUR SOURCE FOR CALLS OF:"
        echo -e "  system\n  fork\n  exec family\n  asm family\n  volatile\033[0m"
        echo -e "\033[0;31mCHECK FAILED\033[0m\n"
        exit 1
    fi
    cp ${GITLAB_USER_LOGIN}_$2_lib.so /sandbox
    echo -e "\033[0;34mCHECK STRATEGY SAFETY\033[0m"
    PYTHONPATH='/' python /games/$4/$5 > temp.txt |:
    ERRMSG="$(cat temp.txt)y"
    if [ "$ERRMSG" = 'y' ]
    then
        cat temp.txt
        echo -e "\033[0;31mCHECK FAILED. ERROR OCCURED\033[0m\n"
        rm -f temp.txt
        exit 1
    else
        cat temp.txt
        echo -e "\033[0;32mCHECK PASSED\033[0m\n"
        rm -f temp.txt
    fi 
else
    echo -e "\033[0;31m${GAME_PATH}${GITLAB_USER_LOGIN}_$2.c NOT FOUND\033[0m\n"
fi